these derivations will be built:
  /nix/store/5lmmrxnfzph53qalwh2hvfx9gfaw7b2x-vector-algorithms-0.7.0.1.drv
building path(s) ‘/nix/store/8z4rwlmzns8l5hwfw6x1c5v5lh7bbpz9-vector-algorithms-0.7.0.1-doc’, ‘/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1’
setupCompilerEnvironmentPhase
Build with /nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204.
unpacking sources
unpacking source archive /nix/store/qgzaahajbvcd6rz8d2srfkf6a6w4fj16-vector-algorithms-0.7.0.1.tar.gz
source root is vector-algorithms-0.7.0.1
setting SOURCE_DATE_EPOCH to timestamp 1439416056 of file vector-algorithms-0.7.0.1/vector-algorithms.cabal
patching sources
Replace Cabal file with edited version from http://hackage.haskell.org/package/vector-algorithms-0.7.0.1/revision/1.cabal.
compileBuildDriverPhase
setupCompileFlags: -package-db=/tmp/nix-build-vector-algorithms-0.7.0.1.drv-0/package.conf.d -j8 -threaded
[1 of 1] Compiling Main             ( Setup.lhs, /tmp/nix-build-vector-algorithms-0.7.0.1.drv-0/Main.o )
Linking Setup ...
configuring
configureFlags: --verbose --prefix=/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1 --libdir=$prefix/lib/$compiler --libsubdir=$pkgid --docdir=/nix/store/8z4rwlmzns8l5hwfw6x1c5v5lh7bbpz9-vector-algorithms-0.7.0.1-doc/share/doc --with-gcc=gcc --package-db=/tmp/nix-build-vector-algorithms-0.7.0.1.drv-0/package.conf.d --ghc-option=-optl=-Wl,-rpath=/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/lib/ghc-8.4.0.20180204/vector-algorithms-0.7.0.1 --ghc-option=-j8 --disable-split-objs --disable-library-profiling --disable-profiling --enable-shared --disable-coverage --enable-library-vanilla --enable-executable-dynamic --enable-tests --ghc-option=-split-sections --extra-lib-dirs=/nix/store/rhvl7q3fszy8j7a3zs73lr7n70pwmvhv-ncurses-6.0-20171125/lib --extra-lib-dirs=/nix/store/7vvk71748c7s1xh13n7imiswkika7k18-gmp-6.1.2/lib --extra-lib-dirs=/nix/store/rhvl7q3fszy8j7a3zs73lr7n70pwmvhv-ncurses-6.0-20171125/lib
Using Parsec parser
Configuring vector-algorithms-0.7.0.1...
Flags chosen: bench=False, boundschecks=True, internalchecks=False,
properties=True, unsafechecks=False
Dependency QuickCheck >=2: using QuickCheck-2.10.1
Dependency base >=4.5 && <5: using base-4.11.0.0
Dependency bytestring >=0.9 && <1.0: using bytestring-0.10.8.2
Dependency containers -any: using containers-0.5.11.0
Dependency primitive >=0.3 && <0.7: using primitive-0.6.3.0
Dependency vector >=0.6 && <0.13: using vector-0.12.0.1
Dependency vector-algorithms -any: using vector-algorithms-0.7.0.1
Source component graph:
    component lib
    component test:properties dependency lib
Configured component graph:
    component vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
        include base-4.11.0.0
        include vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        include primitive-0.6.3.0-CjyqfzwbTeFC8kYPPNlX3M
        include bytestring-0.10.8.2
    component vector-algorithms-0.7.0.1-DI2gxPYGXphCBizjo0loTK-properties
        include base-4.11.0.0
        include bytestring-0.10.8.2
        include containers-0.5.11.0
        include QuickCheck-2.10.1-CbgtHLlDxiaFiLP2gWIbBW
        include vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        include vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
Linked component graph:
    unit vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
        include base-4.11.0.0
        include vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        include primitive-0.6.3.0-CjyqfzwbTeFC8kYPPNlX3M
        include bytestring-0.10.8.2
        Data.Vector.Algorithms.AmericanFlag=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.AmericanFlag,Data.Vector.Algorithms.Heap=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Heap,Data.Vector.Algorithms.Insertion=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Insertion,Data.Vector.Algorithms.Intro=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Intro,Data.Vector.Algorithms.Merge=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Merge,Data.Vector.Algorithms.Optimal=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Optimal,Data.Vector.Algorithms.Radix=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Radix,Data.Vector.Algorithms.Search=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Search,Data.Vector.Algorithms.Tim=vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH:Data.Vector.Algorithms.Tim
    unit vector-algorithms-0.7.0.1-DI2gxPYGXphCBizjo0loTK-properties
        include base-4.11.0.0
        include bytestring-0.10.8.2
        include containers-0.5.11.0
        include QuickCheck-2.10.1-CbgtHLlDxiaFiLP2gWIbBW
        include vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        include vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
Ready component graph:
    definite vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
        depends base-4.11.0.0
        depends vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        depends primitive-0.6.3.0-CjyqfzwbTeFC8kYPPNlX3M
        depends bytestring-0.10.8.2
    definite vector-algorithms-0.7.0.1-DI2gxPYGXphCBizjo0loTK-properties
        depends base-4.11.0.0
        depends bytestring-0.10.8.2
        depends containers-0.5.11.0
        depends QuickCheck-2.10.1-CbgtHLlDxiaFiLP2gWIbBW
        depends vector-0.12.0.1-ANruhCPvY6kWtnXdtpuVt
        depends vector-algorithms-0.7.0.1-9hnJNHuLRFJ9hByh5nTzqH
Using Cabal-2.1.0.0 compiled by ghc-8.4
Using compiler: ghc-8.4.0.20180204
Using install prefix:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1
Executables installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/bin
Libraries installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/lib/ghc-8.4.0.20180204/vector-algorithms-0.7.0.1
Dynamic Libraries installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/lib/ghc-8.4.0.20180204/x86_64-linux-ghc-8.4.0.20180204
Private executables installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/libexec/x86_64-linux-ghc-8.4.0.20180204/vector-algorithms-0.7.0.1
Data files installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/share/x86_64-linux-ghc-8.4.0.20180204/vector-algorithms-0.7.0.1
Documentation installed in:
/nix/store/8z4rwlmzns8l5hwfw6x1c5v5lh7bbpz9-vector-algorithms-0.7.0.1-doc/share/doc
Configuration files installed in:
/nix/store/v7zsxll3igcrqwhz9n6sx67mmqlpp39c-vector-algorithms-0.7.0.1/etc
No alex found
Using ar found on system at:
/nix/store/adidfx4pa7vmvby0gjqqmiwg2x49yr27-binutils-2.28.1/bin/ar
No c2hs found
No cpphs found
No doctest found
Using gcc version 6.4.0 given by user at:
/nix/store/nj7mw0lyx80g7lrxcxy5v9vmnpif5950-gcc-wrapper-6.4.0/bin/gcc
Using ghc version 8.4.0.20180204 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/ghc
Using ghc-pkg version 8.4.0.20180204 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/ghc-pkg
No ghcjs found
No ghcjs-pkg found
No greencard found
Using haddock version 2.19.0 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/haddock
No happy found
Using haskell-suite found on system at: haskell-suite-dummy-location
Using haskell-suite-pkg found on system at: haskell-suite-pkg-dummy-location
No hmake found
Using hpc version 0.67 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/hpc
Using hsc2hs version 0.68.3 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/hsc2hs
Using hscolour version 1.24 found on system at:
/nix/store/626h2ym9fhl5lgnqlqrh5s4b73m5kgy8-hscolour-1.24.2/bin/HsColour
No jhc found
Using ld found on system at:
/nix/store/qhqxgkb2zki59dy4lx6krmgjsnhpjrc9-binutils-wrapper-2.28.1/bin/ld
No lhc found
No lhc-pkg found
No pkg-config found
Using runghc version 8.4.0.20180204 found on system at:
/nix/store/r0jc1krra9xpcfzjgws90v51sxi99bvq-ghc-8.4.0.20180204/bin/runghc
Using strip version 2.28 found on system at:
/nix/store/adidfx4pa7vmvby0gjqqmiwg2x49yr27-binutils-2.28.1/bin/strip
Using tar found on system at:
/nix/store/2waj1y5v572sbigjhqbmhx178vfak1l0-gnutar-1.30/bin/tar
No uhc found
building
Preprocessing library for vector-algorithms-0.7.0.1..
Building library for vector-algorithms-0.7.0.1..
[ 1 of 10] Compiling Data.Vector.Algorithms.Common ( src/Data/Vector/Algorithms/Common.hs, dist/build/Data/Vector/Algorithms/Common.o )
[ 2 of 10] Compiling Data.Vector.Algorithms.Optimal ( src/Data/Vector/Algorithms/Optimal.hs, dist/build/Data/Vector/Algorithms/Optimal.o )
[ 3 of 10] Compiling Data.Vector.Algorithms.Insertion ( src/Data/Vector/Algorithms/Insertion.hs, dist/build/Data/Vector/Algorithms/Insertion.o )
[ 4 of 10] Compiling Data.Vector.Algorithms.Merge ( src/Data/Vector/Algorithms/Merge.hs, dist/build/Data/Vector/Algorithms/Merge.o )
[ 5 of 10] Compiling Data.Vector.Algorithms.AmericanFlag ( src/Data/Vector/Algorithms/AmericanFlag.hs, dist/build/Data/Vector/Algorithms/AmericanFlag.o )
[ 6 of 10] Compiling Data.Vector.Algorithms.Heap ( src/Data/Vector/Algorithms/Heap.hs, dist/build/Data/Vector/Algorithms/Heap.o )
[ 7 of 10] Compiling Data.Vector.Algorithms.Intro ( src/Data/Vector/Algorithms/Intro.hs, dist/build/Data/Vector/Algorithms/Intro.o )
[ 8 of 10] Compiling Data.Vector.Algorithms.Radix ( src/Data/Vector/Algorithms/Radix.hs, dist/build/Data/Vector/Algorithms/Radix.o )
[ 9 of 10] Compiling Data.Vector.Algorithms.Search ( src/Data/Vector/Algorithms/Search.hs, dist/build/Data/Vector/Algorithms/Search.o )
[10 of 10] Compiling Data.Vector.Algorithms.Tim ( src/Data/Vector/Algorithms/Tim.hs, dist/build/Data/Vector/Algorithms/Tim.o )
Preprocessing test suite 'properties' for vector-algorithms-0.7.0.1..
Building test suite 'properties' for vector-algorithms-0.7.0.1..
[1 of 4] Compiling Optimal          ( tests/properties/Optimal.hs, dist/build/properties/properties-tmp/Optimal.dyn_o )
[2 of 4] Compiling Util             ( tests/properties/Util.hs, dist/build/properties/properties-tmp/Util.dyn_o )
[3 of 4] Compiling Properties       ( tests/properties/Properties.hs, dist/build/properties/properties-tmp/Properties.dyn_o )
[4 of 4] Compiling Main             ( tests/properties/Tests.hs, dist/build/properties/properties-tmp/Main.dyn_o )

tests/properties/Tests.hs:120:43: error:
    • Ambiguous type variable ‘mv0’
      prevents the constraint ‘(MVector mv0 Int)’ from being solved.
      Probable fix: use a type annotation to specify what ‘mv0’ should be.
      These potential instances exist:
        instance MVector V.MVector a -- Defined in ‘Data.Vector.Mutable’
        ...plus one instance involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (INT.partialSort :: SizeAlgo Int ())’
      In the second argument of ‘($)’, namely
        ‘label "intropartial"
           . prop_sized
               (const . prop_permutation) (INT.partialSort :: SizeAlgo Int ())’
    |
120 |   qc $ label "intropartial" . prop_sized (const . prop_permutation)
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:120:51: error:
    • Couldn't match type ‘s0’ with ‘s’
        because type variable ‘s’ would escape its scope
      This (rigid, skolem) type variable is bound by
        a type expected by the context:
          forall s (mv :: * -> * -> *). MVector mv Int => mv s Int -> ST s ()
        at tests/properties/Tests.hs:120:51-66
      Expected type: (mv0 s0 Int -> ST s0 ()) -> Vector Int -> Property
        Actual type: (forall s (mv :: * -> * -> *).
                      MVector mv Int =>
                      mv s Int -> ST s ())
                     -> Vector Int -> Property
    • In the second argument of ‘(.)’, namely ‘prop_permutation’
      In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (INT.partialSort :: SizeAlgo Int ())’
    |
120 |   qc $ label "intropartial" . prop_sized (const . prop_permutation)
    |                                                   ^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:122:43: error:
    • Ambiguous type variable ‘mv1’
      prevents the constraint ‘(MVector mv1 Int)’ from being solved.
      Probable fix: use a type annotation to specify what ‘mv1’ should be.
      These potential instances exist:
        instance MVector V.MVector a -- Defined in ‘Data.Vector.Mutable’
        ...plus one instance involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (INT.select :: SizeAlgo Int ())’
      In the second argument of ‘($)’, namely
        ‘label "introselect"
           . prop_sized
               (const . prop_permutation) (INT.select :: SizeAlgo Int ())’
    |
122 |   qc $ label "introselect"  . prop_sized (const . prop_permutation)
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:122:51: error:
    • Couldn't match type ‘s1’ with ‘s’
        because type variable ‘s’ would escape its scope
      This (rigid, skolem) type variable is bound by
        a type expected by the context:
          forall s (mv :: * -> * -> *). MVector mv Int => mv s Int -> ST s ()
        at tests/properties/Tests.hs:122:51-66
      Expected type: (mv1 s1 Int -> ST s1 ()) -> Vector Int -> Property
        Actual type: (forall s (mv :: * -> * -> *).
                      MVector mv Int =>
                      mv s Int -> ST s ())
                     -> Vector Int -> Property
    • In the second argument of ‘(.)’, namely ‘prop_permutation’
      In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (INT.select :: SizeAlgo Int ())’
    |
122 |   qc $ label "introselect"  . prop_sized (const . prop_permutation)
    |                                                   ^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:125:43: error:
    • Ambiguous type variable ‘mv2’
      prevents the constraint ‘(MVector mv2 Int)’ from being solved.
      Probable fix: use a type annotation to specify what ‘mv2’ should be.
      These potential instances exist:
        instance MVector V.MVector a -- Defined in ‘Data.Vector.Mutable’
        ...plus one instance involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (H.partialSort :: SizeAlgo Int ())’
      In the second argument of ‘($)’, namely
        ‘label "heappartial"
           . prop_sized
               (const . prop_permutation) (H.partialSort :: SizeAlgo Int ())’
    |
125 |   qc $ label "heappartial"  . prop_sized (const . prop_permutation)
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:125:51: error:
    • Couldn't match type ‘s2’ with ‘s’
        because type variable ‘s’ would escape its scope
      This (rigid, skolem) type variable is bound by
        a type expected by the context:
          forall s (mv :: * -> * -> *). MVector mv Int => mv s Int -> ST s ()
        at tests/properties/Tests.hs:125:51-66
      Expected type: (mv2 s2 Int -> ST s2 ()) -> Vector Int -> Property
        Actual type: (forall s (mv :: * -> * -> *).
                      MVector mv Int =>
                      mv s Int -> ST s ())
                     -> Vector Int -> Property
    • In the second argument of ‘(.)’, namely ‘prop_permutation’
      In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (H.partialSort :: SizeAlgo Int ())’
    |
125 |   qc $ label "heappartial"  . prop_sized (const . prop_permutation)
    |                                                   ^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:127:43: error:
    • Ambiguous type variable ‘mv3’
      prevents the constraint ‘(MVector mv3 Int)’ from being solved.
      Probable fix: use a type annotation to specify what ‘mv3’ should be.
      These potential instances exist:
        instance MVector V.MVector a -- Defined in ‘Data.Vector.Mutable’
        ...plus one instance involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (H.select :: SizeAlgo Int ())’
      In the second argument of ‘($)’, namely
        ‘label "heapselect"
           . prop_sized
               (const . prop_permutation) (H.select :: SizeAlgo Int ())’
    |
127 |   qc $ label "heapselect"   . prop_sized (const . prop_permutation)
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^

tests/properties/Tests.hs:127:51: error:
    • Couldn't match type ‘s3’ with ‘s’
        because type variable ‘s’ would escape its scope
      This (rigid, skolem) type variable is bound by
        a type expected by the context:
          forall s (mv :: * -> * -> *). MVector mv Int => mv s Int -> ST s ()
        at tests/properties/Tests.hs:127:51-66
      Expected type: (mv3 s3 Int -> ST s3 ()) -> Vector Int -> Property
        Actual type: (forall s (mv :: * -> * -> *).
                      MVector mv Int =>
                      mv s Int -> ST s ())
                     -> Vector Int -> Property
    • In the second argument of ‘(.)’, namely ‘prop_permutation’
      In the first argument of ‘prop_sized’, namely
        ‘(const . prop_permutation)’
      In the second argument of ‘(.)’, namely
        ‘prop_sized
           (const . prop_permutation) (H.select :: SizeAlgo Int ())’
    |
127 |   qc $ label "heapselect"   . prop_sized (const . prop_permutation)
    |                                                   ^^^^^^^^^^^^^^^^
builder for ‘/nix/store/5lmmrxnfzph53qalwh2hvfx9gfaw7b2x-vector-algorithms-0.7.0.1.drv’ failed with exit code 1
error: build of ‘/nix/store/5lmmrxnfzph53qalwh2hvfx9gfaw7b2x-vector-algorithms-0.7.0.1.drv’ failed
